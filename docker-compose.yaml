services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ".env.production"
    container_name: mytube-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=8080
    volumes:
      - ./data/videos:/app/data/videos
      - ./data/uploads:/app/data/uploads
    ports:
      - "8080:8080"

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: mytube-frontend
    restart: unless-stopped
    environment:
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - NUXT_PUBLIC_BASE_URL=https://powa.lan
      - NODE_ENV=development
      - HOST=0.0.0.0
      - PORT=3000
    ports:
      - "3000:3000"

  postgres:
    image: postgres:18-trixie
    container_name: mytube-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql
      - ./config/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./db:/docker-entrypoint-initdb.d

  redis:
    image: redis:8-bookworm
    container_name: mytube-redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]   # enable AOF persistence
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data

  caddy:
    image: caddy:2-alpine
    container_name: mytube-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/Caddyfile.dev:/etc/caddy/Caddyfile:ro
      - ./data/images/:/var/www/mytube/images
      - ./data/videos/:/var/www/mytube/videos
      - ./data/caddy:/data
      - ./logs/caddy:/var/log/
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Linux trick
