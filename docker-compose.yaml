services:
  #mytube-backend:
  #  image: .
  # container_name: mytube-backend
  #  build:
  #    context: .
  #    dockerfile: Dockerfile

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    restart: no
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:8-alpine
    container_name: redis
    restart: no
    command: ["redis-server", "--appendonly", "yes"]   # enable AOF persistence
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data

  #tusd:
  #  image: tusproject/tusd:latest
  #  container_name: tusd
  #  restart: no
  #  user: "${DOCKER_UID}:${DOCKER_GID}"
  #  ports:
  #    - "6380:8080"
  #  volumes:
  #      - ./data/uploads:/srv/tusd-data/data
  #  command: -verbose

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    restart: no
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./data/images/:/var/www/mytube/images
      - ./data/videos/:/var/www/mytube/videos
      #- caddy-data:/data   # certificates, storage
      - ./data/caddy:/data
      - ./logs/caddy:/var/log/
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Linux trick

volumes:
  caddy-data:
